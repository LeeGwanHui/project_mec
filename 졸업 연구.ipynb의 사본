{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1654567601174,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"789bW3UkehWj"},"outputs":[],"source":["import random\n","import numpy as np"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1654567601174,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"f9iQRvO0AvTM","outputId":"f4b56d47-5af4-4630-f63a-4a6bb30c0952"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.28, 2.5)"]},"metadata":{},"execution_count":2}],"source":["# local execution Model\n","\n","def localExecutionModel(c_i) :\n","  c_i = c_i*10**6\n","  f_i_loc = 0.8 * 10**9\n","  delta_i_loc = 10**(-27)*f_i_loc**2\n","  T_i_loc = c_i/f_i_loc\n","  E_i_loc = c_i * delta_i_loc\n","  return E_i_loc, T_i_loc\n","\n","localExecutionModel(2000)"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1654567601174,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"ayfe3Ihx-RlD"},"outputs":[],"source":["def uplink_rate (i,theta_i) :\n","  W = 5*10**6\n","  p_i = 1.2\n","  sigma = 10**(-8)\n","  g_i = 127 + 30*np.log(L[i])\n","  #print(g_i)\n","  # g_i = G[i]\n","  rate_i = theta_i * W * np.log2(1+p_i*g_i/sigma)\n","  return rate_i\n","#uplink_rate(0,1)"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1654567601175,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"hmeTTWqMCPCf"},"outputs":[],"source":["# MEC Execution Model\n","\n","def MECExecutionModel(beta_i,c_i,s_i,i,theta_i) :\n","  # downlink 무시\n","  s_i = s_i*10**(6) # mega\n","  c_i = c_i*10**(6)\n","  R_i = uplink_rate (i,theta_i)\n","  p_i = 1.2\n","  E_i_trans = p_i*s_i/R_i\n","  p_i_w = 0.8\n","  f_mec = 6 * 10**9\n","  E_i_com = p_i_w * c_i / beta_i / f_mec\n","  T_i_offl = s_i / R_i + c_i / beta_i / f_mec\n","  # print( s_i / R_i)\n","  # print(c_i / beta_i / f_mec)\n","  E_i_offl = p_i * s_i / R_i + p_i_w*c_i / beta_i / f_mec\n","  return E_i_offl, T_i_offl\n","\n","# MECExecutionModel(0.1,2000,12,0,0.1)"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1654567601175,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"FdoqkB_WXzvR"},"outputs":[],"source":["D_i_max = 3"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"p6RajLGk7Hap","executionInfo":{"status":"ok","timestamp":1654568758505,"user_tz":-540,"elapsed":411,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}}},"outputs":[],"source":["def RL_step(state,action) :\n","  E_total = 0\n","  new_state = []\n","  # print(len(action))\n","  for i in range(MT_num) :\n","    # print(i)\n","    new_state.append(action[i]|state[i])\n","  # print(new_state)\n","  sum = np.sum(new_state)\n","  done = None\n","  for i in range(MT_num) : \n","    x_i = new_state[i]\n","    # s_i = np.random.randint(12,16)\n","    # c_i = np.random.randint(2000,2500)\n","    s_i = 12\n","    c_i = 2000\n","    beta_i = 1/sum\n","    theta_i = 1/sum\n","    E_i_offl, T_i_offl = MECExecutionModel(beta_i,c_i,s_i,i,theta_i)\n","    E_i_loc, T_i_loc = localExecutionModel(c_i)\n","    T_i = (1-x_i)*T_i_loc + x_i * T_i_offl\n","    E_i = (1-x_i)*E_i_loc + x_i * E_i_offl\n","    E_total+=E_i\n","  reward = - E_total\n","\n","  if state != [0,0] :\n","    done = True\n","\n","  return new_state, reward, done"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"WOePfgRF2TUq","executionInfo":{"status":"ok","timestamp":1654567601175,"user_tz":-540,"elapsed":4,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}}},"outputs":[],"source":["def getBinaryNum(n, lists):\n","    a = n // 2\n","    b = n % 2\n","    lists.append(b)\n","    if a == 0 :\n","        return lists\n","    else :\n","        return getBinaryNum(a, lists)"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"liAW8sTat4J7","executionInfo":{"status":"ok","timestamp":1654567621020,"user_tz":-540,"elapsed":527,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}}},"outputs":[],"source":["area = np.zeros((10,10),dtype=float)\n","\n","AP_num = 1\n","MT_num = 2\n","좌표 = []\n","area_dasi = area\n","\n","## AP 발생\n","for k in range(AP_num) :\n","  x= np.random.randint(10,size=1) # AP의 위치\n","  y= np.random.randint(10,size=1)\n","  while True : # 겹치면 안됨. \n","    if area_dasi[x,y] !=0 :\n","       x= np.random.randint(10,size=1) # AP의 위치\n","       y= np.random.randint(10,size=1)\n","       \n","    else : \n","       break\n","  area_dasi[x,y] = 1 \n","\n","## MT 발생\n","for k in range(MT_num) :\n","  x_dasi= np.random.randint(10,size=1) # MT의 위치\n","  y_dasi= np.random.randint(10,size=1)\n","  while True :\n","    if area_dasi[x_dasi,y_dasi]!=0 : # AP와 MT가 이미 있으면 다시 선언\n","      x_dasi= np.random.randint(10,size=1)\n","      y_dasi= np.random.randint(10,size=1)\n","    else :\n","      break\n","  area_dasi[x_dasi,y_dasi] = -1 \n","\n","## 각 MT 마다 가장 가까운 AP를 구하는 식\n","for a in range(MT_num) :\n","  x_= np.where(area_dasi == -1)[0][a]\n","  y_= np.where(area_dasi == -1)[1][a]\n","  min = 10000\n","  x_좌표 = None\n","  y_좌표 = None\n","  for k in range(AP_num) : \n","    i = np.where(area_dasi == 1)[0][k]\n","    j = np.where(area_dasi == 1)[1][k]\n","    cal = (i-x_)**2 + (j-y_)**2\n","    if min > cal :\n","      min = cal\n","      x_좌표 = i\n","      y_좌표 = j\n","  좌표.append([(x_,y_),(x_좌표,y_좌표)])"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1654567621431,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"9RVM42BkvIq6","outputId":"7ad335d6-ebb1-450e-bb8f-f3b7fae21aeb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n","       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]])"]},"metadata":{},"execution_count":13}],"source":["area_dasi"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1654567621431,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"FRYkdF-8x9hp","outputId":"baed1586-11fb-45d7-f495-9ca6b8498395"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[(2, 7), (7, 8)], [(9, 8), (7, 8)]]"]},"metadata":{},"execution_count":14}],"source":["좌표"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1654567623365,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"mKPgWzjuGGC3","outputId":"c6ec169c-e6fd-4c4f-fae9-6fa3b9c1af49"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[8.44569924e-11],\n","       [3.56830793e-09]])"]},"metadata":{},"execution_count":15}],"source":["G = np.zeros((MT_num, AP_num), dtype =float)\n","S = 10**0.8 # shadowing\n","X = np.random.exponential(scale=1.0, size=None) # rayleigh \n","index =np.where(area_dasi == 1)\n","AP = []\n","L = np.zeros((MT_num, AP_num), dtype =float)\n","for i in range(AP_num) :\n","  x_index = index[0][i]\n","  y_index = index[1][i]\n","  AP.append([x_index,y_index])\n","\n","for i in range(MT_num) :\n","  y=0\n","  for k in AP :\n","    L[i,y] = ((좌표[i][0][0]*100 - k[0]*100)**2 + (좌표[i][0][1]*100 - k[1]*100)**2)**2\n","    G[i,y] = S * X/(((좌표[i][0][0]*100 - k[0]*100)**2 + (좌표[i][0][1]*100 - k[1]*100)**2)**2)\n","    y+=1\n","\n","G"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1654567624875,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"84r2dMtL-kdh","outputId":"d4452717-4e1e-40ac-9b46-db018f872093"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0, 0, 0, 0, 0], [0, 0, 0, 0, 1], [0, 0, 0, 1, 0], [0, 0, 0, 1, 1], [0, 0, 1, 0, 0], [0, 0, 1, 1, 0], [0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [0, 1, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 1, 0, 0, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 1]]\n","[[0, 0, 0, 0, 0], [0, 0, 0, 0, 1], [0, 0, 0, 1, 0], [0, 0, 0, 1, 1], [0, 0, 1, 0, 0], [0, 0, 1, 1, 0], [0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [0, 1, 0, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 0, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 0], [0, 1, 1, 1, 1], [1, 0, 0, 0, 0], [1, 1, 0, 0, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 1, 0, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 0], [1, 1, 1, 1, 1]]\n"]}],"source":["# 5일 때 \n","STATE_ = []\n","for i in range(32) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=5 :\n","    for j in range(5-len(answer)) :\n","      answer.insert(0, 0)\n","  STATE_.append(answer)\n","print(STATE_)\n","\n","ACTION_ = []\n","for i in range(32) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=5 :\n","    for j in range(5-len(answer)) :\n","      answer.insert(0, 0)\n","  ACTION_.append(answer)\n","print(ACTION_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":338,"status":"ok","timestamp":1654333916345,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"btkzbvFt-kdj","outputId":"53a31974-fb4c-4c45-db5f-6e17c0ee075b"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:16: RuntimeWarning: divide by zero encountered in long_scalars\n","  app.launch_new_instance()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:17: RuntimeWarning: divide by zero encountered in long_scalars\n"]},{"data":{"text/plain":["array([-6.4 , -5.47, -5.47, -5.22, -5.47, -5.22, -5.22, -5.67, -5.47,\n","       -5.22, -5.22, -5.67, -5.22, -5.67, -5.67, -6.8 , -5.46, -5.22,\n","       -5.22, -5.67, -5.22, -5.67, -5.67, -6.8 , -5.22, -5.67, -5.67,\n","       -6.8 , -5.67, -6.8 , -6.8 , -8.63])"]},"execution_count":380,"metadata":{},"output_type":"execute_result"}],"source":["# 5 일 때 \n","\n","Q = np.zeros([2**MT_num,2**MT_num])\n","\n","for i in range (2**MT_num) :\n","  state = STATE_[i]\n","  for j in range(2**MT_num) :\n","    # print(j)\n","    action = ACTION_[j]\n","    new_state, reward = RL_step(state,action)\n","    Q[i,j] = np.round(reward,2)\n","\n","Q[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":304,"status":"ok","timestamp":1654333919207,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"-SmKWszh-kdj","outputId":"e7e3e28e-cd82-4cbf-cd88-96b47893ff6c"},"outputs":[{"name":"stdout","output_type":"stream","text":["31\n","-8.63\n","3\n","-5.22\n"]}],"source":["print(Q.argmin())\n","print(Q.min())\n","print(Q.argmax())\n","print(Q.max())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1654333674693,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"v_R0neiC63Jr","outputId":"c7f367c0-3500-4673-bfb3-cd08e0403ca7"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 1], [0, 1, 0, 0], [0, 1, 1, 0], [0, 1, 1, 0], [0, 1, 1, 1], [1, 0, 0, 0], [1, 1, 0, 0], [1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 1, 0], [1, 1, 1, 1]]\n","[[0, 0, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0], [0, 0, 1, 1], [0, 1, 0, 0], [0, 1, 1, 0], [0, 1, 1, 0], [0, 1, 1, 1], [1, 0, 0, 0], [1, 1, 0, 0], [1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 1, 0], [1, 1, 1, 1]]\n"]}],"source":["# 4일 때 \n","STATE_ = []\n","for i in range(16) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=4 :\n","    for j in range(4-len(answer)) :\n","      answer.insert(0, 0)\n","  STATE_.append(answer)\n","print(STATE_)\n","\n","ACTION_ = []\n","for i in range(16) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=4 :\n","    for j in range(4-len(answer)) :\n","      answer.insert(0, 0)\n","  ACTION_.append(answer)\n","print(ACTION_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":444,"status":"ok","timestamp":1654333676179,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"k3AUc0vm63Jr","outputId":"67460755-d58f-48ce-af8e-fb304af20ff6"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:16: RuntimeWarning: divide by zero encountered in long_scalars\n","  app.launch_new_instance()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:17: RuntimeWarning: divide by zero encountered in long_scalars\n"]},{"data":{"text/plain":["array([-5.12, -4.19, -4.19, -3.94, -4.19, -3.94, -3.94, -4.39, -4.19,\n","       -3.94, -3.94, -4.39, -3.94, -4.39, -4.39, -5.53])"]},"execution_count":362,"metadata":{},"output_type":"execute_result"}],"source":["# 4 일 때 \n","\n","Q = np.zeros([2**MT_num,2**MT_num])\n","\n","for i in range (2**MT_num) :\n","  state = STATE_[i]\n","  for j in range(2**MT_num) :\n","    action = ACTION_[j]\n","    new_state, reward = RL_step(state,action)\n","    Q[i,j] = np.round(reward,2)\n","\n","Q[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":389,"status":"ok","timestamp":1654333686046,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"2KNe2x7b-KjM","outputId":"6e943b50-3f8d-4b2f-bb77-5b599a033136"},"outputs":[{"name":"stdout","output_type":"stream","text":["15\n","-5.53\n","3\n","-3.94\n"]}],"source":["print(Q.argmin())\n","print(Q.min())\n","print(Q.argmax())\n","print(Q.max())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":308,"status":"ok","timestamp":1654333134980,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"eBfKXzla1TGJ","outputId":"a6fe038f-74f3-4025-8c68-4d23023f2bdd"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 1, 0], [1, 1, 0], [1, 1, 1]]\n","[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 1, 0], [1, 1, 0], [1, 1, 1]]\n"]}],"source":["# 3일 때 \n","STATE_ = []\n","for i in range(8) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=3 :\n","    for j in range(3-len(answer)) :\n","      answer.insert(0, 0)\n","  STATE_.append(answer)\n","print(STATE_)\n","\n","ACTION_ = []\n","for i in range(8) :\n","  answerList = []\n","  answer = getBinaryNum(i,answerList)\n","  answer.sort(reverse=True)\n","  # print(answer)\n","  # print(len(answer))\n","  if len(answer) !=3 :\n","    for j in range(3-len(answer)) :\n","      answer.insert(0, 0)\n","  ACTION_.append(answer)\n","print(ACTION_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":293,"status":"ok","timestamp":1654333584621,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"F1hGP38L332J","outputId":"3ec7a2f1-d794-448e-833d-c5d386bfe3e6"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:16: RuntimeWarning: divide by zero encountered in long_scalars\n","  app.launch_new_instance()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:17: RuntimeWarning: divide by zero encountered in long_scalars\n"]},{"data":{"text/plain":["array([-3.84, -2.91, -2.91, -2.66, -2.91, -2.66, -2.66, -3.11])"]},"execution_count":342,"metadata":{},"output_type":"execute_result"}],"source":["# 3 일 때 \n","\n","Q = np.zeros([2**MT_num,2**MT_num])\n","\n","for i in range (2**MT_num) :\n","  state = STATE_[i]\n","  for j in range(2**MT_num) :\n","    action = ACTION_[j]\n","    new_state, reward = RL_step(state,action)\n","    # print(reward)\n","    Q[i,j] = np.round(reward,2)\n","\n","Q[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1,"status":"ok","timestamp":1654333585497,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"RFKLja_Y6fcy","outputId":"68d69ff8-a114-4b16-ea98-70a17174f83c"},"outputs":[{"name":"stdout","output_type":"stream","text":["0\n","-3.84\n","3\n","-2.66\n"]}],"source":["print(Q.argmin())\n","print(Q.min())\n","print(Q.argmax())\n","print(Q.max())"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":463,"status":"ok","timestamp":1654567631015,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"},"user_tz":-540},"id":"OyRM9Z2U4_86","outputId":"0baa5c34-3f42-4693-9838-c5f7e35e9f97"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:16: RuntimeWarning: divide by zero encountered in long_scalars\n","  app.launch_new_instance()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:17: RuntimeWarning: divide by zero encountered in long_scalars\n"]},{"output_type":"execute_result","data":{"text/plain":["array([-2.56, -1.63, -1.63, -1.38])"]},"metadata":{},"execution_count":17}],"source":["# 2 일 때 \n","Q = np.zeros([2**MT_num,2**MT_num])\n","\n","STATE_ = [[0,0],[0,1],[1,0],[1,1]]\n","ACTION_ = [[0,0],[0,1],[1,0],[1,1]]\n","for i in range (2**MT_num) :\n","  state = STATE_[i]\n","  for j in range(2**MT_num) :\n","    action = ACTION_[j]\n","    new_state, reward = RL_step(state,action)\n","    Q[i,j] = np.round(reward,2)\n","\n","Q[0]"]},{"cell_type":"code","source":["Q = np.zeros([4, 4])\n","num_episodes = 1000\n","\n","def rargmax(vector) :\n","  #print(vector)\n","  m = np.argmax(vector)\n","  #print(m)\n","  if m == 0 :\n","    action = ACTION_[0]\n","  elif m == 1 :\n","    action = ACTION_[1]\n","  elif m == 2 :\n","    action = ACTION_[2]\n","  elif m == 3 :\n","    action = ACTION_[3]\n","\n","  return action\n","\n","e = 0.1\n","for i in range(num_episodes) :\n","  state = [0,0]\n","  total_reward = 0\n","  done = None # 강화학습이 끝났는지\n","\n","  while not done :\n","    if state == [0,0] :\n","      state_ = 0\n","    elif state == [0,1] :\n","      state_ = 1\n","    elif state == [1,0] :\n","      state_ = 2\n","    elif state == [1,1] :\n","      state_ = 3\n","    action = rargmax(Q[state_,:])\n","    new_state, reward, done = RL_step(state, action)\n","    #print(state)\n","    #print(done)\n","    if new_state == [0,0] :\n","      new_state_ = 0\n","    elif new_state == [0,1] :\n","      new_state_ = 1\n","    elif new_state == [1,0] :\n","      new_state_ = 2\n","    elif new_state == [1,1] :\n","      new_state_ = 3\n","\n","    if action == [0,0] :\n","      action_ = 0\n","    elif action == [0,1] :\n","      action_ = 1\n","    elif action == [1,0] :\n","      action_ = 2\n","    elif action == [1,1] :\n","      action_ = 3\n","\n","    Q[state_, action_] = reward + e * np.max(Q[new_state_, :])\n","    total_reward += reward\n","    state = new_state\n","\n","print(Q[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UPk3KY_T6oav","executionInfo":{"status":"ok","timestamp":1654569259291,"user_tz":-540,"elapsed":553,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}},"outputId":"03ce1796-9691-4093-9d27-efe7d326c61b"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:17: RuntimeWarning: divide by zero encountered in long_scalars\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: RuntimeWarning: divide by zero encountered in long_scalars\n"]},{"output_type":"stream","name":"stdout","text":["[-2.56       -1.62575796 -1.62532989 -1.53575077]\n"]}]},{"cell_type":"code","source":["Q"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QZUPqaMK-Cwe","executionInfo":{"status":"ok","timestamp":1654568677144,"user_tz":-540,"elapsed":444,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}},"outputId":"2b9f5aaa-e4ae-4b43-ee6d-a530b22a9adf"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-2.56,  0.  ,  0.  ,  0.  ],\n","       [ 0.  ,  0.  ,  0.  ,  0.  ],\n","       [ 0.  ,  0.  ,  0.  ,  0.  ],\n","       [ 0.  ,  0.  ,  0.  ,  0.  ]])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PwaANU4d7TlZ"},"outputs":[],"source":["local = [-2.56, -3.84 , -5.12, -6.4]\n","offloading = [-1.34, -3.11, -5.53, -8.63]\n","optimal = [-1.38,-2.66,-3.94, -5.22]\n","\n","x= [2,3,4,5]"]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(x,local,'r-',x,offloading,'b-',x,optimal,'g-')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"Hrq4WjnPLWzp","executionInfo":{"status":"ok","timestamp":1654488912119,"user_tz":-540,"elapsed":823,"user":{"displayName":"Lee gwan hui","userId":"09079206913426271362"}},"outputId":"486c9a7c-6922-4985-a5bb-96bc34cbc4f2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"KR0xN-tlLfnF"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":[],"name":"졸업 연구.ipynb의 사본","provenance":[],"authorship_tag":"ABX9TyOk+qoUmAM0kjsUUhIY5eE8"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}